{"version":3,"file":"index.js","sources":["../node_modules/@stdlib/utils-define-property/lib/define_property.js","../node_modules/@stdlib/utils-define-property/lib/builtin.js","../node_modules/@stdlib/utils-define-property/lib/polyfill.js","../node_modules/@stdlib/utils-define-property/lib/index.js","../node_modules/@stdlib/utils-define-property/lib/has_define_property_support.js","../node_modules/@stdlib/utils-define-read-only-property/lib/main.js","../node_modules/@stdlib/constants-time-hours-in-day/lib/index.js","../node_modules/@stdlib/constants-time-milliseconds-in-day/lib/index.js","../node_modules/@stdlib/constants-time-milliseconds-in-hour/lib/index.js","../node_modules/@stdlib/constants-time-milliseconds-in-week/lib/index.js","../node_modules/@stdlib/constants-time-seconds-in-week/lib/index.js","../lib/index.js","../node_modules/@stdlib/constants-time-hours-in-week/lib/index.js","../node_modules/@stdlib/constants-time-milliseconds-in-minute/lib/index.js","../node_modules/@stdlib/constants-time-milliseconds-in-second/lib/index.js","../node_modules/@stdlib/constants-time-minutes-in-day/lib/index.js","../node_modules/@stdlib/constants-time-minutes-in-hour/lib/index.js","../node_modules/@stdlib/constants-time-minutes-in-week/lib/index.js","../node_modules/@stdlib/constants-time-months-in-year/lib/index.js","../node_modules/@stdlib/constants-time-seconds-in-day/lib/index.js","../node_modules/@stdlib/constants-time-seconds-in-hour/lib/index.js","../node_modules/@stdlib/constants-time-seconds-in-minute/lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nvar defineProperty = Object.defineProperty;\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n\n'use strict';\n\n// VARIABLES //\n\nvar objectProtoype = Object.prototype;\nvar toStr = objectProtoype.toString;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__;\n\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nfunction defineProperty( obj, prop, descriptor ) {\n\tvar prototype;\n\tvar hasValue;\n\tvar hasGet;\n\tvar hasSet;\n\n\tif ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an object. Value: `' + obj + '`.' );\n\t}\n\tif ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {\n\t\tthrow new TypeError( 'invalid argument. Property descriptor must be an object. Value: `' + descriptor + '`.' );\n\t}\n\thasValue = ( 'value' in descriptor );\n\tif ( hasValue ) {\n\t\tif (\n\t\t\tlookupGetter.call( obj, prop ) ||\n\t\t\tlookupSetter.call( obj, prop )\n\t\t) {\n\t\t\t// Override `__proto__` to avoid touching inherited accessors:\n\t\t\tprototype = obj.__proto__;\n\t\t\tobj.__proto__ = objectProtoype;\n\n\t\t\t// Delete property as existing getters/setters prevent assigning value to specified property:\n\t\t\tdelete obj[ prop ];\n\t\t\tobj[ prop ] = descriptor.value;\n\n\t\t\t// Restore original prototype:\n\t\t\tobj.__proto__ = prototype;\n\t\t} else {\n\t\t\tobj[ prop ] = descriptor.value;\n\t\t}\n\t}\n\thasGet = ( 'get' in descriptor );\n\thasSet = ( 'set' in descriptor );\n\n\tif ( hasValue && ( hasGet || hasSet ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );\n\t}\n\n\tif ( hasGet && defineGetter ) {\n\t\tdefineGetter.call( obj, prop, descriptor.get );\n\t}\n\tif ( hasSet && defineSetter ) {\n\t\tdefineSetter.call( obj, prop, descriptor.set );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils-define-property\n*\n* @example\n* import defineProperty from '@stdlib/utils-define-property' ;\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n\n// MODULES //\n\nimport hasDefinePropertySupport from './has_define_property_support.js' ;\nimport builtin from './builtin.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar defineProperty;\nif ( hasDefinePropertySupport() ) {\n\tdefineProperty = builtin;\n} else {\n\tdefineProperty = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './define_property.js' ;\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from '@stdlib/utils-define-property' ;\n\n\n// MAIN //\n\n/**\n* Defines a read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Number of hours in a day.\n*\n* @module @stdlib/constants-time-hours-in-day\n* @type {integer32}\n*\n* @example\n* import HOURS_IN_DAY from '@stdlib/constants-time-hours-in-day' ;\n* // returns 24\n*/\n\n\n// MAIN //\n\n/**\n* The number of hours in a day.\n*\n* @constant\n* @type {integer32}\n* @default 24\n*/\nvar HOURS_IN_DAY = 24|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default HOURS_IN_DAY;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Number of milliseconds in a day.\n*\n* @module @stdlib/constants-time-milliseconds-in-day\n* @type {integer32}\n*\n* @example\n* import MILLISECONDS_IN_DAY from '@stdlib/constants-time-milliseconds-in-day' ;\n* // returns 86400000\n*/\n\n\n// MAIN //\n\n/**\n* The number of milliseconds in a day.\n*\n* ```tex\n* 1000 \\cdot 60 \\cdot 60 \\cdot 24 = 86400000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 86400000\n*/\nvar MILLISECONDS_IN_DAY = 86400000|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default MILLISECONDS_IN_DAY;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Number of milliseconds in an hour.\n*\n* @module @stdlib/constants-time-milliseconds-in-hour\n* @type {integer32}\n*\n* @example\n* import MILLISECONDS_IN_HOUR from '@stdlib/constants-time-milliseconds-in-hour' ;\n* // returns 3600000\n*/\n\n\n// MAIN //\n\n/**\n* The number of milliseconds in an hour.\n*\n* ```tex\n* 1000 \\cdot 60 \\cdot 60 = 3600000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 3600000\n*/\nvar MILLISECONDS_IN_HOUR = 3600000|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default MILLISECONDS_IN_HOUR;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Number of milliseconds in a week.\n*\n* @module @stdlib/constants-time-milliseconds-in-week\n* @type {integer32}\n*\n* @example\n* import MILLISECONDS_IN_WEEK from '@stdlib/constants-time-milliseconds-in-week' ;\n* // returns 604800000\n*/\n\n\n// MAIN //\n\n/**\n* The number of milliseconds in a week.\n*\n* ```tex\n* 1000 \\cdot 60 \\cdot 60 \\cdot 24 \\cdot 7 = 604800000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 604800000\n*/\nvar MILLISECONDS_IN_WEEK = 604800000|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default MILLISECONDS_IN_WEEK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Number of seconds in a week.\n*\n* @module @stdlib/constants-time-seconds-in-week\n* @type {integer32}\n*\n* @example\n* import SECONDS_IN_WEEK from '@stdlib/constants-time-seconds-in-week' ;\n* // returns 604800\n*/\n\n\n// MAIN //\n\n/**\n* The number of seconds in a week.\n*\n* ```tex\n* 60 \\cdot 60 \\cdot 24 \\cdot 7 = 604800\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 604800\n*/\nvar SECONDS_IN_WEEK = 604800|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default SECONDS_IN_WEEK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-read-only-property' ;\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name HOURS_IN_DAY\n* @memberof ns\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/time/hours-in-day}\n*/\nimport HOURS_IN_DAY from '@stdlib/constants-time-hours-in-day';\nsetReadOnly( ns, 'HOURS_IN_DAY', HOURS_IN_DAY );\n\n/**\n* @name HOURS_IN_WEEK\n* @memberof ns\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/time/hours-in-week}\n*/\nimport HOURS_IN_WEEK from '@stdlib/constants-time-hours-in-week';\nsetReadOnly( ns, 'HOURS_IN_WEEK', HOURS_IN_WEEK );\n\n/**\n* @name MILLISECONDS_IN_DAY\n* @memberof ns\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/time/milliseconds-in-day}\n*/\nimport MILLISECONDS_IN_DAY from '@stdlib/constants-time-milliseconds-in-day';\nsetReadOnly( ns, 'MILLISECONDS_IN_DAY', MILLISECONDS_IN_DAY );\n\n/**\n* @name MILLISECONDS_IN_HOUR\n* @memberof ns\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/time/milliseconds-in-hour}\n*/\nimport MILLISECONDS_IN_HOUR from '@stdlib/constants-time-milliseconds-in-hour';\nsetReadOnly( ns, 'MILLISECONDS_IN_HOUR', MILLISECONDS_IN_HOUR );\n\n/**\n* @name MILLISECONDS_IN_MINUTE\n* @memberof ns\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/time/milliseconds-in-minute}\n*/\nimport MILLISECONDS_IN_MINUTE from '@stdlib/constants-time-milliseconds-in-minute';\nsetReadOnly( ns, 'MILLISECONDS_IN_MINUTE', MILLISECONDS_IN_MINUTE );\n\n/**\n* @name MILLISECONDS_IN_SECOND\n* @memberof ns\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/time/milliseconds-in-second}\n*/\nimport MILLISECONDS_IN_SECOND from '@stdlib/constants-time-milliseconds-in-second';\nsetReadOnly( ns, 'MILLISECONDS_IN_SECOND', MILLISECONDS_IN_SECOND );\n\n/**\n* @name MILLISECONDS_IN_WEEK\n* @memberof ns\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/time/milliseconds-in-week}\n*/\nimport MILLISECONDS_IN_WEEK from '@stdlib/constants-time-milliseconds-in-week';\nsetReadOnly( ns, 'MILLISECONDS_IN_WEEK', MILLISECONDS_IN_WEEK );\n\n/**\n* @name MINUTES_IN_DAY\n* @memberof ns\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/time/minutes-in-day}\n*/\nimport MINUTES_IN_DAY from '@stdlib/constants-time-minutes-in-day';\nsetReadOnly( ns, 'MINUTES_IN_DAY', MINUTES_IN_DAY );\n\n/**\n* @name MINUTES_IN_HOUR\n* @memberof ns\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/time/minutes-in-hour}\n*/\nimport MINUTES_IN_HOUR from '@stdlib/constants-time-minutes-in-hour';\nsetReadOnly( ns, 'MINUTES_IN_HOUR', MINUTES_IN_HOUR );\n\n/**\n* @name MINUTES_IN_WEEK\n* @memberof ns\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/time/minutes-in-week}\n*/\nimport MINUTES_IN_WEEK from '@stdlib/constants-time-minutes-in-week';\nsetReadOnly( ns, 'MINUTES_IN_WEEK', MINUTES_IN_WEEK );\n\n/**\n* @name MONTHS_IN_YEAR\n* @memberof ns\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/time/months-in-year}\n*/\nimport MONTHS_IN_YEAR from '@stdlib/constants-time-months-in-year';\nsetReadOnly( ns, 'MONTHS_IN_YEAR', MONTHS_IN_YEAR );\n\n/**\n* @name SECONDS_IN_DAY\n* @memberof ns\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/time/seconds-in-day}\n*/\nimport SECONDS_IN_DAY from '@stdlib/constants-time-seconds-in-day';\nsetReadOnly( ns, 'SECONDS_IN_DAY', SECONDS_IN_DAY );\n\n/**\n* @name SECONDS_IN_HOUR\n* @memberof ns\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/time/seconds-in-hour}\n*/\nimport SECONDS_IN_HOUR from '@stdlib/constants-time-seconds-in-hour';\nsetReadOnly( ns, 'SECONDS_IN_HOUR', SECONDS_IN_HOUR );\n\n/**\n* @name SECONDS_IN_MINUTE\n* @memberof ns\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/time/seconds-in-minute}\n*/\nimport SECONDS_IN_MINUTE from '@stdlib/constants-time-seconds-in-minute';\nsetReadOnly( ns, 'SECONDS_IN_MINUTE', SECONDS_IN_MINUTE );\n\n/**\n* @name SECONDS_IN_WEEK\n* @memberof ns\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/time/seconds-in-week}\n*/\nimport SECONDS_IN_WEEK from '@stdlib/constants-time-seconds-in-week';\nsetReadOnly( ns, 'SECONDS_IN_WEEK', SECONDS_IN_WEEK );\n\n\n// EXPORTS //\n\nexport default ns;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Number of hours in a week.\n*\n* @module @stdlib/constants-time-hours-in-week\n* @type {integer32}\n*\n* @example\n* import HOURS_IN_WEEK from '@stdlib/constants-time-hours-in-week' ;\n* // returns 168\n*/\n\n\n// MAIN //\n\n/**\n* The number of hours in a week.\n*\n* ```tex\n* 7 \\cdot 24 = 168\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 168\n*/\nvar HOURS_IN_WEEK = 168|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default HOURS_IN_WEEK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Number of milliseconds in a minute.\n*\n* @module @stdlib/constants-time-milliseconds-in-minute\n* @type {integer32}\n*\n* @example\n* import MILLISECONDS_IN_MINUTE from '@stdlib/constants-time-milliseconds-in-minute' ;\n* // returns 60000\n*/\n\n\n// MAIN //\n\n/**\n* The number of milliseconds in a minute.\n*\n* ```tex\n* 1000 \\cdot 60 = 60000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 60000\n*/\nvar MILLISECONDS_IN_MINUTE = 60000|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default MILLISECONDS_IN_MINUTE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Number of milliseconds in a second.\n*\n* @module @stdlib/constants-time-milliseconds-in-second\n* @type {integer32}\n*\n* @example\n* import MILLISECONDS_IN_SECOND from '@stdlib/constants-time-milliseconds-in-second' ;\n* // returns 1000\n*/\n\n\n// MAIN //\n\n/**\n* The number of milliseconds in a second.\n*\n* @constant\n* @type {integer32}\n* @default 1000\n*/\nvar MILLISECONDS_IN_SECOND = 1000|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default MILLISECONDS_IN_SECOND;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Number of minutes in a day.\n*\n* @module @stdlib/constants-time-minutes-in-day\n* @type {integer32}\n*\n* @example\n* import MINUTES_IN_DAY from '@stdlib/constants-time-minutes-in-day' ;\n* // returns 1440\n*/\n\n\n// MAIN //\n\n/**\n* The number of minutes in a day.\n*\n* ```tex\n* 60 \\cdot 24 = 1440\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 1440\n*/\nvar MINUTES_IN_DAY = 1440|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default MINUTES_IN_DAY;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Number of minutes in an hour.\n*\n* @module @stdlib/constants-time-minutes-in-hour\n* @type {integer32}\n*\n* @example\n* import MINUTES_IN_HOUR from '@stdlib/constants-time-minutes-in-hour' ;\n* // returns 60\n*/\n\n\n// MAIN //\n\n/**\n* The number of minutes in an hour.\n*\n* @constant\n* @type {integer32}\n* @default 60\n*/\nvar MINUTES_IN_HOUR = 60|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default MINUTES_IN_HOUR;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Number of minutes in a week.\n*\n* @module @stdlib/constants-time-minutes-in-week\n* @type {integer32}\n*\n* @example\n* import MINUTES_IN_WEEK from '@stdlib/constants-time-minutes-in-week' ;\n* // returns 10080\n*/\n\n\n// MAIN //\n\n/**\n* The number of minutes in a week.\n*\n* ```tex\n* 60 \\cdot 24 \\cdot 7 = 10080\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 10080\n*/\nvar MINUTES_IN_WEEK = 10080|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default MINUTES_IN_WEEK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Number of months in a year.\n*\n* @module @stdlib/constants-time-months-in-year\n* @type {integer32}\n*\n* @example\n* import MONTHS_IN_YEAR from '@stdlib/constants-time-months-in-year' ;\n* // returns 12\n*/\n\n\n// MAIN //\n\n/**\n* The number of months in a year.\n*\n* @constant\n* @type {integer32}\n* @default 12\n*/\nvar MONTHS_IN_YEAR = 12|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default MONTHS_IN_YEAR;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Number of seconds in a day.\n*\n* @module @stdlib/constants-time-seconds-in-day\n* @type {integer32}\n*\n* @example\n* import SECONDS_IN_DAY from '@stdlib/constants-time-seconds-in-day' ;\n* // returns 86400\n*/\n\n\n// MAIN //\n\n/**\n* The number of seconds in a day.\n*\n* ```tex\n* 60 \\cdot 60 \\cdot 24 = 86400\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 86400\n*/\nvar SECONDS_IN_DAY = 86400|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default SECONDS_IN_DAY;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Number of seconds in an hour.\n*\n* @module @stdlib/constants-time-seconds-in-hour\n* @type {integer32}\n*\n* @example\n* import SECONDS_IN_HOUR from '@stdlib/constants-time-seconds-in-hour' ;\n* // returns 3600\n*/\n\n\n// MAIN //\n\n/**\n* The number of seconds in an hour.\n*\n* ```tex\n* 60 \\cdot 60 = 3600\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 3600\n*/\nvar SECONDS_IN_HOUR = 3600|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default SECONDS_IN_HOUR;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Number of seconds in a minute.\n*\n* @module @stdlib/constants-time-seconds-in-minute\n* @type {integer32}\n*\n* @example\n* import SECONDS_IN_MINUTE from '@stdlib/constants-time-seconds-in-minute' ;\n* // returns 60\n*/\n\n\n// MAIN //\n\n/**\n* The number of seconds in a minute.\n*\n* @constant\n* @type {integer32}\n* @default 60\n*/\nvar SECONDS_IN_MINUTE = 60|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default SECONDS_IN_MINUTE;\n"],"names":["main","Object","defineProperty","objectProtoype","prototype","toStr","toString","defineGetter","__defineGetter__","defineSetter","__defineSetter__","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","defineProperty$1","err","hasDefinePropertySupport","builtin","obj","prop","descriptor","hasValue","hasGet","hasSet","call","TypeError","__proto__","value","Error","get","set","setReadOnly","configurable","enumerable","writable","MILLISECONDS_IN_DAY","MILLISECONDS_IN_HOUR","MILLISECONDS_IN_WEEK","SECONDS_IN_WEEK","ns"],"mappings":";0CAsBA,IAAIA,EAA0C,mBAA1BC,OAAOC,eAAkCD,OAAOC,eAAiB,KCiCjFA,EAAiBD,OAAOC,eC/BxBC,EAAiBF,OAAOG,UACxBC,EAAQF,EAAeG,SACvBC,EAAeJ,EAAeK,iBAC9BC,EAAeN,EAAeO,iBAC9BC,EAAeR,EAAeS,iBAC9BC,EAAeV,EAAeW,iBC4BlCC,ECpBA,WAEC,IAEC,OADAb,EAAgB,GAAI,IAAK,KAClB,EACN,MAAQc,GACT,OAAO,GDKJC,GACaC,EDgBlB,SAAyBC,EAAKC,EAAMC,GACnC,IAAIjB,EACAkB,EACAC,EACAC,EAEJ,GAAoB,iBAARL,GAA4B,OAARA,GAAsC,mBAAtBd,EAAMoB,KAAMN,GAC3D,MAAM,IAAIO,UAAW,+DAAiEP,EAAM,MAE7F,GAA2B,iBAAfE,GAA0C,OAAfA,GAAoD,mBAA7BhB,EAAMoB,KAAMJ,GACzE,MAAM,IAAIK,UAAW,oEAAsEL,EAAa,MAyBzG,IAvBAC,EAAa,UAAWD,KAGtBV,EAAac,KAAMN,EAAKC,IACxBP,EAAaY,KAAMN,EAAKC,IAGxBhB,EAAYe,EAAIQ,UAChBR,EAAIQ,UAAYxB,SAGTgB,EAAKC,GACZD,EAAKC,GAASC,EAAWO,MAGzBT,EAAIQ,UAAYvB,GAEhBe,EAAKC,GAASC,EAAWO,OAG3BL,EAAW,QAASF,EACpBG,EAAW,QAASH,EAEfC,IAAcC,GAAUC,GAC5B,MAAM,IAAIK,MAAO,wHASlB,OANKN,GAAUhB,GACdA,EAAakB,KAAMN,EAAKC,EAAMC,EAAWS,KAErCN,GAAUf,GACdA,EAAagB,KAAMN,EAAKC,EAAMC,EAAWU,KAEnCZ,GGjER,SAASa,EAAab,EAAKC,EAAMQ,GAChC1B,EAAgBiB,EAAKC,EAAM,CAC1Ba,cAAgB,EAChBC,YAAc,EACdC,UAAY,EACZP,MAASA,ICTR,ICICQ,EAAsB,MCAtBC,EAAuB,KCAvBC,EAAuB,OCAvBC,EAAkB,OCTtBC,EAAA,GAWAR,EAAAQ,EAAA,eLNmB,IKiBnBR,EAAAQ,EAAA,gBCboB,KDwBpBR,EAAAQ,EAAA,sBAAAJ,GAWAJ,EAAAQ,EAAA,uBAAAH,GAWAL,EAAAQ,EAAA,yBE9C6B,KFyD7BR,EAAAQ,EAAA,yBG7D6B,KHwE7BR,EAAAQ,EAAA,uBAAAF,GAWAN,EAAAQ,EAAA,iBI/EqB,MJ0FrBR,EAAAQ,EAAA,kBK9FsB,ILyGtBR,EAAAQ,EAAA,kBMrGsB,ONgHtBR,EAAAQ,EAAA,iBOpHqB,IP+HrBR,EAAAQ,EAAA,iBQ3HqB,ORsIrBR,EAAAQ,EAAA,kBStIsB,MTiJtBR,EAAAQ,EAAA,oBUrJwB,IVgKxBR,EAAAQ,EAAA,kBAAAD,kBLhKmB,mBMIC,8ECAS,6BCJA,8CCIR,uBCJC,qBCIA,uBCJD,oBCIA,wBCAC,yBCJE"}